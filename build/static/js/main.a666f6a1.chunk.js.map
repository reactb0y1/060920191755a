{"version":3,"sources":["CommentsContainer/Comments/Comments.js","CommentsContainer/CommentsHead/CommentsHead.js","CommentsContainer/WriteComment/WriteComment.js","CommentsContainer/CommentsConatiner.js","Profile/Manager/Manager.js","Profile/Services/Services.js","Profile/Profile.js","App.js","serviceWorker.js","res/Redux/reducers.js","index.js"],"names":["Comments","state","commentsData","name","date","text","this","map","commentItem","className","newDate","Date","getDate","getUTCMonth","getFullYear","month","dateMonthYear","getToday","prevCommentsData","newCommentData","props","textStore","nextCommentsData","push","setState","makeList","prevProps","setComment","Component","connect","CommentsHead","WriteComment","valueText","e","target","value","preventDefault","onAddText","window","event","ctrlKey","onChange","setText","bind","onKeyPress","addCommentKey","onClick","addComment","dispatch","textes","type","CommentsContainer","Manager","Services","id","Profile","App","Boolean","location","hostname","match","store","createStore","action","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a666f6a1.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport './Comments.css'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Comments extends Component {\r\n\r\n    state = {\r\n        commentsData: [\r\n            {\r\n                name: 'Самуил',\r\n                date: '13 октября 2011',\r\n                text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\r\n            },\r\n            {\r\n                name: 'Лилия Семёнова',\r\n                date: '14 октября 2011',\r\n                text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Debitis fugiat id quasi! Nostrum, sed?'\r\n            },\r\n            {\r\n                name: 'Лилия Семёнова',\r\n                date: '13 октября 2011',\r\n                text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam aliquid deleniti exercitationem inventore mollitia, nam omnis quia saepe sunt voluptatibus? Incidunt.'\r\n            },\r\n        ]\r\n    };\r\n\r\n    makeList() {\r\n        const commentsData = this.state.commentsData;\r\n\r\n        const commentItem = commentsData.map((commentItem) =>\r\n            <li className='CommentsItem'>\r\n                <h5 className=\"CommentsName\">{commentItem.name}</h5>\r\n\r\n                <span className=\"CommentsDate\">{commentItem.date}</span>\r\n\r\n                <div className=\"CommentsTextContainer\">\r\n                    <p className=\"CommentsText\">{commentItem.text}</p>\r\n                </div>\r\n            </li>\r\n        );\r\n\r\n        return commentItem\r\n\r\n    }\r\n\r\n    getToday() {\r\n        const newDate = new Date;\r\n\r\n        let [date, month, year] = [\r\n            newDate.getDate(),\r\n            newDate.getUTCMonth() + 1,\r\n            newDate.getFullYear()\r\n        ]\r\n\r\n        if (month === 1) month = 'января';\r\n        if (month === 2) month = 'февраля';\r\n        if (month === 3) month = 'марта';\r\n        if (month === 4) month = 'апреля';\r\n        if (month === 5) month = 'мая';\r\n        if (month === 6) month = 'июня';\r\n        if (month === 7) month = 'июля';\r\n        if (month === 8) month = 'августа';\r\n        if (month === 9) month = 'сентября';\r\n        if (month === 10) month = 'октября';\r\n        if (month === 11) month = 'ноября';\r\n        if (month === 12) month = 'декабря';\r\n\r\n        const dateMonthYear = date + ' ' + month + ' ' + year;\r\n\r\n        return dateMonthYear\r\n    }\r\n\r\n    setComment() {\r\n\r\n        const dateMonthYear = this.getToday();\r\n\r\n        const prevCommentsData = this.state.commentsData;\r\n\r\n        const newCommentData = {\r\n            name: 'username',\r\n            date: dateMonthYear,\r\n            text: this.props.textStore\r\n        };\r\n\r\n        const nextCommentsData = prevCommentsData.push(newCommentData);\r\n        \r\n        this.setState({\r\n            nextCommentsData\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"Comments\">\r\n                {this.makeList()}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) {\r\n            this.setComment()\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        textStore: state\r\n    })\r\n)(Comments)","import React, {Component} from 'react'\r\nimport './CommentsHead.css'\r\n\r\nclass CommentsHead extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"CommentsHead\">\r\n\r\n                <div className=\"reviews\">\r\n                    <h3 className='reviewsLast reviewsActive'>Последние отзывы</h3>\r\n                    <h3 className='reviewsAll'>Все отзывы</h3>\r\n                </div>\r\n\r\n                <div className=\"CommentsHeadInfo\">\r\n\r\n                    <div className=\"likes\">\r\n                        <span className='likesIco'/>\r\n                        <p  className=\"likesText\">131</p>\r\n                    </div>\r\n\r\n                    <div className=\"comments\">\r\n                        <span className='commentsIco'/>\r\n                        <p className=\"commentsText\">14</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentsHead","import React, {Component} from 'react'\r\nimport './WriteComment.css'\r\nimport {connect} from 'react-redux'\r\n\r\nclass WriteComment extends Component {\r\n    state = {\r\n        valueText: \"\"\r\n    }\r\n\r\n    setText(e) {\r\n        this.setState({\r\n            valueText: e.target.value\r\n        })\r\n    }\r\n\r\n    addComment(e) {\r\n        e.preventDefault();\r\n        this.props.onAddText(this.state.valueText);\r\n\r\n        this.setState({\r\n            valueText: \"\"\r\n        })\r\n    }\r\n\r\n    addCommentKey(e) {\r\n\r\n        e = e || window.event;\r\n\r\n        if (e.ctrlKey) {\r\n\r\n            this.props.onAddText(this.state.valueText);\r\n\r\n            this.setState({\r\n                valueText: \"\"\r\n            })\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"WriteComment\">\r\n\r\n                <textarea\r\n                    value={this.state.valueText}\r\n                    onChange={this.setText.bind(this)}\r\n                    className=\"WriteCommentTextarea\"\r\n                    onKeyPress={this.addCommentKey.bind(this)}\r\n                />\r\n\r\n                <button\r\n                    className=\"WriteCommentButton\"\r\n                    onClick={this.addComment.bind(this)}\r\n                >\r\n                    Написать консультанту\r\n                </button>\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    dispatch => ({\r\n        onAddText: (textes) => {\r\n            dispatch({type: 'ADD_TEXT', text: textes})\r\n        }\r\n    })\r\n)(WriteComment)","import React, {Component} from 'react'\r\nimport './CommentsContainer.css'\r\nimport Comment from './Comments/Comments'\r\nimport CommentsHead from './CommentsHead/CommentsHead'\r\nimport WriteComment from './WriteComment/WriteComment'\r\n\r\nclass CommentsContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div className='CommentsContainer'>\r\n                <CommentsHead/>\r\n                <Comment/>\r\n                <WriteComment/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentsContainer","import React, {Component} from 'react'\r\nimport './Manager.css'\r\n\r\nclass Manager extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Manager\">\r\n                <span className='ManagerPhoto'/>\r\n                <div className=\"ManagerRight\">\r\n                    <h5 className=\"ManagerName\">Вероника Ростова</h5>\r\n                    <p className=\"ManagerInfo\">Менеджер по продажам</p>\r\n                    <div className=\"ManagerStatusContainer\">\r\n                        <p className='ManagerStatus'>Подберу для Вас самые лучшие предложения. Мои услуги абсолютно бесплатны</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Manager","import React, {Component} from 'react'\r\nimport './Services.css'\r\n\r\nclass Services extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Services\">\r\n                <table className='ServicesTable'>\r\n                    <thead>\r\n                        <tr className='ServicesTableFirstTr'>\r\n                            <td/>\r\n                            <td>Услуги</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr className='ServicesTableTrEmpty'>\r\n                            <td/>\r\n                            <td/>\r\n                        </tr>\r\n                        <tr className='ServicesTableMiddleTr'>\r\n                            <td className='ratingContainer'>\r\n                                <span\r\n                                    className='rating'\r\n                                    id='rating_1'\r\n                                />\r\n                                Ручное бронирование\r\n                            </td>\r\n                            <td>11</td>\r\n                        </tr>\r\n                        <tr className='ServicesTableMiddleTr'>\r\n                            <td className='ratingContainer'>\r\n                                <span\r\n                                    className='rating'\r\n                                    id='rating_2'\r\n                                />\r\n                                Пакетные туры\r\n                            </td>\r\n                            <td>3</td>\r\n                        </tr>\r\n                        <tr className='ServicesTableMiddleTr'>\r\n                            <td className='ratingContainer'>\r\n                                <span\r\n                                    className='rating'\r\n                                    id='rating_3'\r\n                                />\r\n                                Отели\r\n                            </td>\r\n                            <td>1</td>\r\n                        </tr>\r\n                        <tr className='ServicesTableTrEmpty'>\r\n                            <td/>\r\n                            <td/>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr className='ServicesTableLastTr'>\r\n                            <td>Всего</td>\r\n                            <td>15</td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Services","import React, {Component} from 'react'\r\nimport './Profile.css'\r\nimport Manager from \"./Manager/Manager\";\r\nimport Services from \"./Services/Services\";\r\n\r\nclass Profile extends Component {\r\n    render() {\r\n        return (\r\n            <div className='Profile'>\r\n                <Manager/>\r\n                <Services/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Comments from './CommentsContainer/CommentsConatiner'\r\nimport Profile from './Profile/Profile'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Profile/>\r\n      <Comments/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore} from 'redux'\r\n\r\nfunction reducerExample(state=[], action) {\r\n    if (action.type === 'ADD_TEXT') {\r\n        return [ ...state, action.text ];\r\n    }\r\n    return state\r\n}\r\n\r\nexport const store = createStore(reducerExample,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './media.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux'\r\nimport {store} from './res/Redux/reducers'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}